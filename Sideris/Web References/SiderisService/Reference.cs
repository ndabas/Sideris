//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version:2.0.40607.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.40607.42.
// 
namespace Sideris.SiderisService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SiderisServiceSoap", Namespace="http://tempuri.org/")]
    public class SiderisService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public SiderisService() {
            string urlSetting = System.Configuration.ConfigurationSettings.AppSettings["Sideris.SiderisService.SiderisService"];
            if ((urlSetting != null)) {
                this.Url = string.Concat(urlSetting, "");
            }
            else {
                this.Url = "http://localhost:13060/SiderisServer/SiderisService.asmx";
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Register(string name, ushort port, File[] shares, out System.DateTime expires) {
            object[] results = this.Invoke("Register", new object[] {
                        name,
                        port,
                        shares});
            expires = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegister(string name, ushort port, File[] shares, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Register", new object[] {
                        name,
                        port,
                        shares}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRegister(System.IAsyncResult asyncResult, out System.DateTime expires) {
            object[] results = this.EndInvoke(asyncResult);
            expires = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ping", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Ping(int port, out System.DateTime expires) {
            object[] results = this.Invoke("Ping", new object[] {
                        port});
            expires = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPing(int port, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ping", new object[] {
                        port}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndPing(System.IAsyncResult asyncResult, out System.DateTime expires) {
            object[] results = this.EndInvoke(asyncResult);
            expires = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Unregister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Unregister(int port) {
            object[] results = this.Invoke("Unregister", new object[] {
                        port});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnregister(int port, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Unregister", new object[] {
                        port}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUnregister(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] SearchByName(int port, string name) {
            object[] results = this.Invoke("SearchByName", new object[] {
                        port,
                        name});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByName(int port, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByName", new object[] {
                        port,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndSearchByName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByHash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] SearchByHash(int port, string hash) {
            object[] results = this.Invoke("SearchByHash", new object[] {
                        port,
                        hash});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByHash(int port, string hash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByHash", new object[] {
                        port,
                        hash}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndSearchByHash(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class File {
        
        /// <remarks/>
        public string Peer;
        
        /// <remarks/>
        public string PeerName;
        
        /// <remarks/>
        public string Hash;
        
        /// <remarks/>
        public long Size;
        
        /// <remarks/>
        public string Name;
    }
}
